---
import { type CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';

interface Props {
	entry: CollectionEntry<'gear'>;
}

export async function getStaticPaths() {
	const gear = await getCollection('gear');
	return gear.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<a class="back-link" href="/gear/"><Icon icon="arrow-left" /> Gear</a>
					<Hero title={entry.data.title} align="start">
						<div class="details">
							<div class="gear-meta">
								{entry.data.category && <span class="category">{entry.data.category}</span>}
								{entry.data.price && <span class="price">{entry.data.price}</span>}
								{entry.data.rating && (
									<div class="rating">
										<span>Rating: </span>
										{Array.from({ length: 5 }, (_, i) => (
											<Icon 
												icon="heart" 
												size="1em" 
												color={i < entry.data.rating ? "var(--accent-regular)" : "var(--gray-400)"}
											/>
										))}
									</div>
								)}
							</div>
							<div class="tags">
								{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
							</div>
							<p class="description">{entry.data.description}</p>
						</div>
					</Hero>
				</div>
			</header>
			<main class="wrapper">
				<div class="stack gap-10 content">
					{entry.data.img && <img src={entry.data.img} alt={entry.data.img_alt || ''} />}
					<div class="content">
						<Content />
					</div>
					{entry.data.pros && entry.data.pros.length > 0 && (
						<div class="pros-cons">
							<div class="pros">
								<h3>Pros</h3>
								<ul>
									{entry.data.pros.map((pro) => <li>{pro}</li>)}
								</ul>
							</div>
							{entry.data.cons && entry.data.cons.length > 0 && (
								<div class="cons">
									<h3>Cons</h3>
									<ul>
										{entry.data.cons.map((con) => <li>{con}</li>)}
									</ul>
								</div>
							)}
						</div>
					)}
				</div>
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.back-link {
		display: none;
	}

	.gear-meta {
		display: flex;
		gap: 1rem;
		margin-bottom: 1rem;
		flex-wrap: wrap;
		align-items: center;
	}

	.category, .price {
		padding: 0.5rem 1rem;
		background: var(--accent-regular);
		color: var(--accent-text-over);
		border-radius: 0.5rem;
		font-weight: 500;
		font-size: var(--text-sm);
	}

	.rating {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		font-size: var(--text-sm);
		color: var(--gray-300);
	}

	.pros-cons {
		display: grid;
		gap: 2rem;
		margin-top: 2rem;
		padding: 2rem;
		background: var(--gray-900);
		border-radius: 1rem;
	}

	.pros h3, .cons h3 {
		color: var(--accent-regular);
		margin-bottom: 1rem;
	}

	.pros ul, .cons ul {
		list-style: none;
		padding: 0;
	}

	.pros li, .cons li {
		padding: 0.5rem 0;
		border-bottom: 1px solid var(--gray-800);
	}

	.pros li:last-child, .cons li:last-child {
		border-bottom: none;
	}

	@media (min-width: 50em) {
		.back-link {
			display: inline-flex;
			align-items: center;
			gap: 0.5rem;
			color: var(--gray-400);
			text-decoration: none;
			font-size: var(--text-sm);
			margin-bottom: 1rem;
		}

		.back-link:hover {
			color: var(--gray-200);
		}

		.gear-meta {
			margin-bottom: 1.5rem;
		}

		.category, .price {
			font-size: var(--text-base);
		}

		.pros-cons {
			grid-template-columns: 1fr 1fr;
		}
	}
</style> 